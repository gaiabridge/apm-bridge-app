/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FeeDB, FeeDBInterface } from "../FeeDB";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_protocolFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_protocolFeeRecipient",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_paysFeeWhenSending",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "UpdateFeeAndRecipient",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "discountRate",
        type: "uint256",
      },
    ],
    name: "UpdateNFTDiscountRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "newType",
        type: "bool",
      },
    ],
    name: "UpdatePaysFeeWhenSending",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "discountRate",
        type: "uint256",
      },
    ],
    name: "UpdateUserDiscountRate",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getFeeDataForReceive",
    outputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_discountRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getFeeDataForSend",
    outputs: [
      {
        internalType: "bool",
        name: "_paysFeeWhenSending",
        type: "bool",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_protocolFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_discountRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nftDiscountRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paysFeeWhenSending",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFeeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "togglePaysFeeWhenSending",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "updateFeeAndRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "nfts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "discountRates",
        type: "uint256[]",
      },
    ],
    name: "updateNFTDiscountRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "discountRates",
        type: "uint256[]",
      },
    ],
    name: "updateUserDiscountRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userDiscountRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610eb4380380610eb483398101604081905261002f91610171565b61003833610121565b6064831061007c5760405162461bcd60e51b815260206004820152600d60248201526c6d61782066656520697320393960981b604482015260640160405180910390fd5b6001839055600280546001600160a01b0384166001600160a81b03199091168117600160a01b84151502179091556040805185815260208101929092527fe8cacb7f13fe3f08cbe7dfb1e7101162c3624a3c122fdd2bbd57bced5e201f36910160405180910390a160405181151581527f59e8988eb3002ff52d35f187b02a41527f298c862a25db459310d1cdc344ce099060200160405180910390a15050506101c6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060006060848603121561018657600080fd5b835160208501519093506001600160a01b03811681146101a557600080fd5b604085015190925080151581146101bb57600080fd5b809150509250925092565b610cdf806101d56000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638bb81b881161008c578063b0e21e8a11610066578063b0e21e8a14610236578063e526cd871461023f578063f2fde38b14610252578063fdb25a3c1461026557600080fd5b80638bb81b88146101d35780638da5cb5b146101f3578063aec461831461020457600080fd5b806354b72eda116100c857806354b72eda1461017457806364df049e1461017c578063715018a6146101a757806385acea06146101af57600080fd5b80630f21b64d146100ef5780633f7d3421146101225780635119e3621461015f575b600080fd5b61010f6100fd366004610a92565b60046020526000908152604090205481565b6040519081526020015b60405180910390f35b610135610130366004610aaf565b610278565b6040805194151585526001600160a01b039093166020850152918301526060820152608001610119565b61017261016d366004610b80565b6102f9565b005b6101726104d8565b60025461018f906001600160a01b031681565b6040516001600160a01b039091168152602001610119565b61017261055c565b6002546101c390600160a01b900460ff1681565b6040519015158152602001610119565b61010f6101e1366004610a92565b60036020526000908152604090205481565b6000546001600160a01b031661018f565b610217610212366004610aaf565b610592565b604080516001600160a01b039093168352602083019190915201610119565b61010f60015481565b61017261024d366004610b80565b6105e9565b610172610260366004610a92565b6107c1565b610172610273366004610bec565b61085c565b600254600160a01b900460ff166000808083156102b0576002546001600160a01b03169250826102b0575060009150819050806102f0565b6001546001600160a01b0388166000908152600360205260408120549193506102da898989610927565b90508082116102e957806102eb565b815b925050505b93509350935093565b6000546001600160a01b0316331461032c5760405162461bcd60e51b815260040161032390610c1c565b60405180910390fd5b8281146103715760405162461bcd60e51b81526020600482015260136024820152721b195b99dd1a081a5cc81b9bdd08195c5d585b606a1b6044820152606401610323565b60005b838110156104d15761271083838381811061039157610391610c51565b9050602002013511156103de5760405162461bcd60e51b815260206004820152601560248201527406d617820646973636f756e7420697320313030303605c1b6044820152606401610323565b8282828181106103f0576103f0610c51565b905060200201356003600087878581811061040d5761040d610c51565b90506020020160208101906104229190610a92565b6001600160a01b031681526020810191909152604001600020557f66f5c8ba307e94099f62c5c4b7f1bc66f6cb55639cf8fec49fd379917c70a3bf85858381811061046f5761046f610c51565b90506020020160208101906104849190610a92565b84848481811061049657610496610c51565b604080516001600160a01b0390951685526020918202939093013590840152500160405180910390a1806104c981610c67565b915050610374565b5050505050565b6000546001600160a01b031633146105025760405162461bcd60e51b815260040161032390610c1c565b6002805460ff60a01b198116600160a01b9182900460ff168015928302919091179092556040519081527f59e8988eb3002ff52d35f187b02a41527f298c862a25db459310d1cdc344ce099060200160405180910390a150565b6000546001600160a01b031633146105865760405162461bcd60e51b815260040161032390610c1c565b6105906000610a2d565b565b6002546001600160a01b0316600081156105e1576001600160a01b038516600090815260036020526040812054906105cb878787610927565b90508082116105da57806105dc565b815b925050505b935093915050565b6000546001600160a01b031633146106135760405162461bcd60e51b815260040161032390610c1c565b828181146106595760405162461bcd60e51b81526020600482015260136024820152721b195b99dd1a081a5cc81b9bdd08195c5d585b606a1b6044820152606401610323565b60005b818110156107b95761271084848381811061067957610679610c51565b9050602002013511156106c65760405162461bcd60e51b815260206004820152601560248201527406d617820646973636f756e7420697320313030303605c1b6044820152606401610323565b8383828181106106d8576106d8610c51565b90506020020135600460008888858181106106f5576106f5610c51565b905060200201602081019061070a9190610a92565b6001600160a01b031681526020810191909152604001600020557f3672f901be24eef0014cc2fd7e20b0f28112f9acd4083e8bf6bbe9e263ef829386868381811061075757610757610c51565b905060200201602081019061076c9190610a92565b85858481811061077e5761077e610c51565b604080516001600160a01b0390951685526020918202939093013590840152500160405180910390a1806107b181610c67565b91505061065c565b505050505050565b6000546001600160a01b031633146107eb5760405162461bcd60e51b815260040161032390610c1c565b6001600160a01b0381166108505760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610323565b61085981610a2d565b50565b6000546001600160a01b031633146108865760405162461bcd60e51b815260040161032390610c1c565b606482106108c65760405162461bcd60e51b815260206004820152600d60248201526c6d61782066656520697320393960981b6044820152606401610323565b6001829055600280546001600160a01b0319166001600160a01b0383169081179091556040805184815260208101929092527fe8cacb7f13fe3f08cbe7dfb1e7101162c3624a3c122fdd2bbd57bced5e201f36910160405180910390a15050565b60008115610a2657600061093d83850185610a92565b90506001600160a01b03811615610a24576001600160a01b038116600090815260046020526040902054915081610978576000915050610a26565b6040516370a0823160e01b81526001600160a01b038681166004830152600091908316906370a0823190602401602060405180830381865afa1580156109c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e69190610c90565b11610a245760405162461bcd60e51b815260206004820152600e60248201526d3737ba1037333a103437b63232b960911b6044820152606401610323565b505b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461085957600080fd5b600060208284031215610aa457600080fd5b8135610a2681610a7d565b600080600060408486031215610ac457600080fd5b8335610acf81610a7d565b9250602084013567ffffffffffffffff80821115610aec57600080fd5b818601915086601f830112610b0057600080fd5b813581811115610b0f57600080fd5b876020828501011115610b2157600080fd5b6020830194508093505050509250925092565b60008083601f840112610b4657600080fd5b50813567ffffffffffffffff811115610b5e57600080fd5b6020830191508360208260051b8501011115610b7957600080fd5b9250929050565b60008060008060408587031215610b9657600080fd5b843567ffffffffffffffff80821115610bae57600080fd5b610bba88838901610b34565b90965094506020870135915080821115610bd357600080fd5b50610be087828801610b34565b95989497509550505050565b60008060408385031215610bff57600080fd5b823591506020830135610c1181610a7d565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610c8957634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215610ca257600080fd5b505191905056fea2646970667358221220d9cd7ed192200a1564a34823e416e1cad0457f8dfbf6b7c7ba53cbfce704975764736f6c634300080c0033";

type FeeDBConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeDBConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeDB__factory extends ContractFactory {
  constructor(...args: FeeDBConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "FeeDB";
  }

  deploy(
    _protocolFee: BigNumberish,
    _protocolFeeRecipient: string,
    _paysFeeWhenSending: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FeeDB> {
    return super.deploy(
      _protocolFee,
      _protocolFeeRecipient,
      _paysFeeWhenSending,
      overrides || {}
    ) as Promise<FeeDB>;
  }
  getDeployTransaction(
    _protocolFee: BigNumberish,
    _protocolFeeRecipient: string,
    _paysFeeWhenSending: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _protocolFee,
      _protocolFeeRecipient,
      _paysFeeWhenSending,
      overrides || {}
    );
  }
  attach(address: string): FeeDB {
    return super.attach(address) as FeeDB;
  }
  connect(signer: Signer): FeeDB__factory {
    return super.connect(signer) as FeeDB__factory;
  }
  static readonly contractName: "FeeDB";
  public readonly contractName: "FeeDB";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeDBInterface {
    return new utils.Interface(_abi) as FeeDBInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FeeDB {
    return new Contract(address, _abi, signerOrProvider) as FeeDB;
  }
}
