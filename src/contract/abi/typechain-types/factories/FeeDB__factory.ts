/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FeeDB, FeeDBInterface } from "../FeeDB";

const _abi = [
  {
    constant: false,
    inputs: [],
    name: "togglePaysFeeWhenSending",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "protocolFeeRecipient",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "paysFeeWhenSending",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "",
        type: "address",
      },
    ],
    name: "userDiscountRate",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "protocolFee",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "user",
        type: "address",
      },
      {
        name: "amount",
        type: "uint256",
      },
    ],
    name: "userFee",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "users",
        type: "address[]",
      },
      {
        name: "discountRates",
        type: "uint256[]",
      },
    ],
    name: "setDiscountRate",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "newFee",
        type: "uint256",
      },
      {
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "updateFeeAndRecipient",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_protocolFee",
        type: "uint256",
      },
      {
        name: "_protocolFeeRecipient",
        type: "address",
      },
      {
        name: "_paysFeeWhenSending",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "newFee",
        type: "uint256",
      },
      {
        indexed: false,
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "UpdateFeeAndRecipient",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "newType",
        type: "bool",
      },
    ],
    name: "UpdatePaysFeeWhenSending",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051606080610a788339810180604052606081101561003057600080fd5b5080516020820151604092830151600080546001600160a01b031916331780825594519394929391926001600160a01b0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3612710831061009657600080fd5b6001839055600280546001600160a01b0319166001600160a01b038416908117600160a01b60ff02191674010000000000000000000000000000000000000000841515021790915560408051858152602081019290925280517fe8cacb7f13fe3f08cbe7dfb1e7101162c3624a3c122fdd2bbd57bced5e201f369281900390910190a160408051821515815290517f59e8988eb3002ff52d35f187b02a41527f298c862a25db459310d1cdc344ce099181900360200190a1505050610918806101606000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638f32d59b116100715780638f32d59b1461014b578063b0e21e8a14610153578063ba1ec16b1461015b578063de0c1b7614610187578063f2fde38b14610249578063fdb25a3c1461026f576100b4565b806354b72eda146100b957806364df049e146100c3578063715018a6146100e757806385acea06146100ef5780638bb81b881461010b5780638da5cb5b14610143575b600080fd5b6100c161029b565b005b6100cb610350565b604080516001600160a01b039092168252519081900360200190f35b6100c161035f565b6100f76103f3565b604080519115158252519081900360200190f35b6101316004803603602081101561012157600080fd5b50356001600160a01b0316610403565b60408051918252519081900360200190f35b6100cb610415565b6100f7610424565b610131610435565b6101316004803603604081101561017157600080fd5b506001600160a01b03813516906020013561043b565b6100c16004803603604081101561019d57600080fd5b8101906020810181356401000000008111156101b857600080fd5b8201836020820111156101ca57600080fd5b803590602001918460208302840111640100000000831117156101ec57600080fd5b91939092909160208101903564010000000081111561020a57600080fd5b82018360208201111561021c57600080fd5b8035906020019184602083028401116401000000008311171561023e57600080fd5b5090925090506104b1565b6100c16004803603602081101561025f57600080fd5b50356001600160a01b0316610588565b6100c16004803603604081101561028557600080fd5b50803590602001356001600160a01b03166105de565b6102a3610424565b6102e55760408051600160e51b62461bcd02815260206004820181905260248201526000805160206108cd833981519152604482015290519081900360640190fd5b6002805474ff0000000000000000000000000000000000000000198116600160a01b9182900460ff1680159283029190911790925560408051918252517f59e8988eb3002ff52d35f187b02a41527f298c862a25db459310d1cdc344ce09916020908290030190a150565b6002546001600160a01b031681565b610367610424565b6103a95760408051600160e51b62461bcd02815260206004820181905260248201526000805160206108cd833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600254600160a01b900460ff1681565b60036020526000908152604090205481565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b60015481565b600154600090806104505760009150506104ab565b6001600160a01b0384166000908152600360205260409020546001546104a7916127109161048e9161049a918491849190830363ffffffff61069816565b9063ffffffff6106fb16565b869063ffffffff61069816565b9150505b92915050565b6104b9610424565b6104fb5760408051600160e51b62461bcd02815260206004820181905260248201526000805160206108cd833981519152604482015290519081900360640190fd5b82811461050757600080fd5b60005b838110156105815761271083838381811061052157fe5b90506020020135111561053357600080fd5b82828281811061053f57fe5b905060200201356003600087878581811061055657fe5b602090810292909201356001600160a01b03168352508101919091526040016000205560010161050a565b5050505050565b610590610424565b6105d25760408051600160e51b62461bcd02815260206004820181905260248201526000805160206108cd833981519152604482015290519081900360640190fd5b6105db8161073d565b50565b6105e6610424565b6106285760408051600160e51b62461bcd02815260206004820181905260248201526000805160206108cd833981519152604482015290519081900360640190fd5b612710821061063657600080fd5b6001829055600280546001600160a01b0319166001600160a01b03831690811790915560408051848152602081019290925280517fe8cacb7f13fe3f08cbe7dfb1e7101162c3624a3c122fdd2bbd57bced5e201f369281900390910190a15050565b6000826106a7575060006104ab565b828202828482816106b457fe5b04146106f457604051600160e51b62461bcd0281526004018080602001828103825260218152602001806108ac6021913960400191505060405180910390fd5b9392505050565b60006106f483836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506107e0565b6001600160a01b03811661078557604051600160e51b62461bcd0281526004018080602001828103825260268152602001806108866026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000818361086f57604051600160e51b62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561083457818101518382015260200161081c565b50505050905090810190601f1680156108615780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161087b57fe5b049594505050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a165627a7a7230582047f39742e8d71055892d2b1dc224b31853d348a1024a55a7a6dc25f74ad79c020029";

type FeeDBConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeDBConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeDB__factory extends ContractFactory {
  constructor(...args: FeeDBConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "FeeDB";
  }

  deploy(
    _protocolFee: BigNumberish,
    _protocolFeeRecipient: string,
    _paysFeeWhenSending: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FeeDB> {
    return super.deploy(
      _protocolFee,
      _protocolFeeRecipient,
      _paysFeeWhenSending,
      overrides || {}
    ) as Promise<FeeDB>;
  }
  getDeployTransaction(
    _protocolFee: BigNumberish,
    _protocolFeeRecipient: string,
    _paysFeeWhenSending: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _protocolFee,
      _protocolFeeRecipient,
      _paysFeeWhenSending,
      overrides || {}
    );
  }
  attach(address: string): FeeDB {
    return super.attach(address) as FeeDB;
  }
  connect(signer: Signer): FeeDB__factory {
    return super.connect(signer) as FeeDB__factory;
  }
  static readonly contractName: "FeeDB";
  public readonly contractName: "FeeDB";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeDBInterface {
    return new utils.Interface(_abi) as FeeDBInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FeeDB {
    return new Contract(address, _abi, signerOrProvider) as FeeDB;
  }
}
